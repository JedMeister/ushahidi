#!/bin/bash -ex

DB_NAME=ushahidi
DB_USER=ushahidi
DB_PASS=$(mcookie)

ADMIN_PASS=turnkey
ADMIN_MAIL=admin@example.com

SRC=/usr/local/src
WEBROOT=/var/www/ushahidi

# unpack tarball & cleanup
tar -xvf $SRC/ushahidi.tar.gz -C $SRC
mkdir -p $(dirname $WEBROOT) # should exist; but just in case...
mv $SRC/ushahidi-platform-release-*/html $WEBROOT
rm -rf $SRC/ushahidi*

# create conf
cat > $WEBROOT/platform/.env <<EOF
APP_ENV=production
APP_DEBUG=false
APP_KEY=$(mcookie)
# This is only relevant for debug level stuff like timestamps in log messages
APP_TIMEZONE=UTC

DB_HOST=localhost
DB_DATABASE=ushahidi
DB_USERNAME=ushahidi
DB_PASSWORD=$DB_PASS
DB_CONNECTION=mysql

## Cache (you can use array if testing, and memcache or redis for production)
CACHE_DRIVER=redis
QUEUE_DRIVER=redis
REDIS_HOST=127.0.0.1
REDIS_PORT=6379

# Enabling or disabling the maintenance mode page
MAINTENANCE_MODE=0
EOF

# setup the database
service mysql start
mysqladmin create $DB_NAME
mysql --batch --execute "grant all privileges on $DB_NAME.* to $DB_USER@localhost identified by '$DB_PASS'; flush privileges;"

# finalise api setup
cd $WEBROOT/platform
php artisan migrate
mkdir -p storage/{logs,app,framework,passport}
chown -R www-data:www-data storage/{logs,app,framework}
php artisan passport:keys

# update admin user email & set site name
#mysql --batch --execute "UPDATE $DB_NAME.users SET email='$ADMIN_MAIL' WHERE id=1;"
#created=$(mysql --batch --skip-column-names --execute "select created from $DB_NAME.users where id=1;")
#updated=$((created + 360))
#mysql --batch --execute "UPDATE $DB_NAME.users SET updated=$updated WHERE id=1;"
/usr/lib/inithooks/bin/ushahidi.py --email="$ADMIN_MAIL" --pass="$ADMIN_PASS"
mysql --batch --execute "UPDATE $DB_NAME.config SET config_value='\"TurnKey Ushahidi\"' WHERE group_name='site' and config_key='name';"

mysqldump ushahidi > /root/db_dump.sql

service mysql stop

# configure apache
a2dissite 000-default
a2ensite ushahidi
a2enmod rewrite
a2enmod headers
